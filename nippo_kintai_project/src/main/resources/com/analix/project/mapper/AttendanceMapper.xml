<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.analix.project.mapper.AttendanceMapper">

	<select id="findAllDailyAttendance"
		resultType="com.analix.project.entity.Attendance">
		SELECT *
		FROM
		attendance
		WHERE
		user_id = #{userId}
		AND
		DATE_FORMAT(date, '%Y-%m') =
		#{yearMonth}
	</select>

	<insert id="registDailyAttendance" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.analix.project.entity.Attendance">
		INSERT INTO
		attendance(user_id,status,date,start_time,end_time,remarks)
		values(#{attendance.userId},#{attendance.status},#{attendance.date},#{attendance.startTime},#{attendance.endTime},#{attendance.remarks})
	</insert>


	<update id="updateDailyAttendance"
		parameterType="com.analix.project.entity.Attendance">
		UPDATE attendance
		SET status =
		#{attendance.status},
		start_time =
		#{attendance.startTime},
		end_time =
		#{attendance.endTime},
		remarks =
		#{attendance.remarks}

		WHERE
		id = #{attendance.id}
		AND user_id =
		#{attendance.userId}
		AND date =
		#{attendance.date}


	</update>

	<!--承認申請者情報取得 -->
	<select id="findByUserIdAndYearMonth" parameterType="map"
		resultType="com.analix.project.entity.Attendance">
		SELECT id, user_id, date, status, start_time, end_time,
		remarks
		FROM attendance
		WHERE user_id = #{userId}
		AND DATE_FORMAT(date,
		'%Y-%m') = #{targetYearMonth}
	</select>

	<select id="attendanceUnsubmittedPersonList"
		resultType="com.analix.project.entity.Users">
		SELECT users.id,
		users.name,
		users.email,
		users.tel
		FROM users
		LEFT JOIN attendance
		ON
		users.id
		= attendance.user_id AND attendance.date
		= #{today}
		WHERE
		attendance.user_id IS NULL
		AND users.role
		= "Regular"
		OR
		users.role
		="UnitManager";


	</select>

	<insert id="upsertStartTime" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.analix.project.entity.Attendance">
		INSERT INTO attendance (id, user_id,
		status, date, start_time)
		VALUES (#{attendance.id},
		#{attendance.userId}, #{attendance.status},
		#{attendance.date},
		#{attendance.startTime})
		ON DUPLICATE KEY UPDATE
		status =
		#{attendance.status},
		start_time = #{attendance.startTime};

	</insert>

	<update id="updateEndTime"
		parameterType="com.analix.project.entity.Attendance">
		UPDATE attendance
		SET status = #{attendance.status},
		end_time = #{attendance.endTime}
		WHERE user_id = #{attendance.userId}
		AND date = #{attendance.date};
	</update>

	<select id="todaysStartTimeExistCheck" resultType="boolean">
		 SELECT EXISTS (
        SELECT 1 
        FROM attendance 
        WHERE user_id = #{userId} 
        AND date = #{today} 
        AND start_time != ''
    );
	</select>
	
	<!-- 訂正申請承認後-->
	<update id="updateAttendanceFromCorrection" parameterType="Integer">
		UPDATE attendance a
		JOIN attendance_correction ac
		ON a.user_id = ac.user_id
		AND a.date = ac.date
		SET
		a.status = ac.status,
		a.start_time = ac.start_time,
		a.end_time = ac.end_time,
		a.remarks = ac.remarks
		WHERE ac.id = #{id}
	</update>

</mapper>