<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.analix.project.mapper.DepartmentMapper">
	
	<!-- 有効な部署名の検索 -->
	<select id="findAllDepartmentName"
		resultType="com.analix.project.entity.Department">
		SELECT department_id,name FROM department
		WHERE is_active = 1
		ORDER BY department_id ASC
	</select>
	
	<!-- 部署名の有効フラグの検索 -->
	<select id="findDepartmentStatusByName" resultType="Byte">
		SELECT is_active FROM department
		WHERE name = #{name} 
<!--		SELECT COUNT(*) FROM department-->
<!--		WHERE name = #{name}-->
	</select>
	
	<!-- 新部署名登録 -->
	<insert id="registDepartment" useGeneratedKeys="true"
		keyProperty="departmentId" parameterType="com.analix.project.form.DepartmentForm">
		INSERT INTO
		department(name, is_active)
		VALUES (#{departmentForm.name}, 1)
	</insert>
	
	<!-- 部署名変更 -->
	<update id="updateDepartmentName"
		parameterType="com.analix.project.form.DepartmentForm">
		UPDATE department
		SET name = #{newName}
		WHERE name = #{exsistsName}
		AND is_active = 1
	</update>
	
	<!-- 部署名削除(論理削除) -->
	<update id="deleteDepartment"
		parameterType="com.analix.project.form.DepartmentForm">
		UPDATE department
		SET is_active = 0
		WHERE name = #{exsistsName}
	</update>
	
	<!-- 無効な部署名の検索 -->
	<select id="findInactiveDepartment"
		resultType="com.analix.project.entity.Department">
		SELECT department_id,name FROM department
		WHERE is_active = 0
		ORDER BY department_id ASC
	</select>
	
	<!-- 部署名有効化(無効から有効) -->
	<update id="updateDepartmentToActive"
		parameterType="com.analix.project.form.DepartmentForm">
		UPDATE department
		SET is_active = 1
		WHERE name = #{inactiveName}
	</update>

	<!-- 部署IDに紐づくユーザー数のカウント -->
<!--	<select id="getUsersCountByDepartmentId" resultType="Integer">-->
<!--		SELECT COUNT(*)-->
<!--		FROM users-->
<!--		INNER JOIN department-->
<!--		ON users.department_id = department.department_id-->
<!--		WHERE department.department_id = #{departmentId}-->
<!--	</select>-->
	
	<!-- 部署IDに紐づくユーザー情報取得(部署IDで検索→ユーザー名、権限、社員番号、部署名、isActive取得) -->
	<resultMap id="departmentUserMap" type="com.analix.project.dto.DepartmentUserDto">
		<result property="userName" column="user_name"/>
		<result property="role" column="role"/>
		<result property="employeeCode" column="employee_code" />
		<result property="departmentId" column="department_id"/>
		<result property="isActive" column="is_active"/>
	</resultMap>
	
	<select id="findUsersByDepartmentId" resultMap="departmentUserMap">
		SELECT u.name AS user_name, u.role, u.employee_code, d.name AS department_name, d.is_active
		FROM users u
		JOIN department d
		ON u.department_id = d.department_id
		WHERE d.department_id = #{departmentId}
		ORDER BY FIELD(u.role, 'Admin', 'UnitManager', 'Manager', 'Regular')
	</select>
	
	<!-- 部署ID全件取得 -->
	<select id="findAllDepartmentId" resultType="integer">
		SELECT department_id
		FROM department
		WHERE is_active = 1
	</select>
		
</mapper>